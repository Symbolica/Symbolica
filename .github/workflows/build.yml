name: Build
on:
  push:
    branches:
    - master
    tags:
    - "*"
  pull_request:
jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
        - os: ubuntu-18.04
          nugetPush: true
        - os: windows-2019
          nugetPush: false
        - os: macos-10.15
          nugetPush: false
    steps:
    - name: Checkout code
      uses: actions/checkout@master
      with:
        fetch-depth: 0
    - name: Setup WSL distribution
      run: |
        Invoke-WebRequest -Uri https://aka.ms/wsl-ubuntu-1804 -OutFile Ubuntu.zip -UseBasicParsing
        Expand-Archive .\Ubuntu.zip .\Ubuntu
        & .\Ubuntu\ubuntu.exe
    - name: Setup dotnet SDK
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: "5.0.300"
    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v0.9.9
      with:
        versionSpec: "5.6.9"
    - name: Run GitVersion
      id: gitversion
      uses: gittools/actions/gitversion/execute@v0.9.9
    - name: Build
      run: |
        version=${{ steps.gitversion.outputs.nuGetVersionV2 }}
        if [ "${{ github.event_name }}" == "pull_request" ]
        then
            version=${version}-${{ steps.gitversion.outputs.shortSha }}
        fi
        dotnet build -c Release -p:Version=${version}
      shell: bash
    - name: Test
      run: dotnet test -c Release --no-build
    - name: Archive NuGet Packages
      uses: actions/upload-artifact@v2
      if: ${{ matrix.nugetPush }}
      with:
        name: packages
        path: |
          **/*.nupkg
          **/*.snupkg
        retention-days: 1
  nuget-push:
    runs-on: ubuntu-18.04
    needs: [build]
    steps:
    - name: Download NuGet Packages
      uses: actions/download-artifact@v2
      with:
        name: packages
    - name: NuGet Push
      run: dotnet nuget push **/*.nupkg -s https://api.nuget.org/v3/index.json --api-key ${{ secrets.NUGET_API_KEY }}
